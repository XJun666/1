#! /bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
#=================================================================#
#   System Required:  CentOS 6,7, Debian, Ubuntu                   #
#   Description: One click Install wubbaPool Server              #
#   Author: wubbaR                                              #
#   Thanks: @wubbaR <https://t.me/joinchat/K7ES0xMvjK02YzE1>       #
#   Thanks: xxxxxxxxxxxxxxxxxxxx                           #
#   Intro:  hxxxxxxxxxxxxxxxxxxx                              #
#=================================================================#
#rm -f wubbaR
mkdir /home/lhteth/
cd /home/lhteth/
clear

echo -e "\033[34m================================================================\033[0m

\033[31m                欢迎使用矿池代理一键脚本                         \033[0m

\033[31m         wubba：https://t.me/joinchat/K7ES0xMvjK02YzE1，  \033[0m
\033[31m                非公网本地搭建 ip地址手动改成内网地址                 \033[0m
\033[31m                vps上的端口也需要打开，不然没网                      \033[0m
\033[31m           即将开始搭建... 建议centos6.8 x64                      \033[0m
\033[34m================================================================\033[0m";
echo

echo

#Current folder
cur_dir=`pwd`
wubbaaddr=""
t1=""
conf_file="/home/lhteth/nginx/conf/nginx.conf"
# 准备工作
prewget()
{
    # 查看物理CPU个数
    co=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
    # 查看每个物理CPU中core的个数(即核数)
    #cb=$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)
    #echo "$co  $cb"
    # 查看逻辑CPU的个数
    t1=$(cat /proc/cpuinfo| grep "processor"| wc -l)
    #线程数
   # ta=$((10#${co}+0))
    #tb=$((10#${cb}+0))
    #echo "$ta + $tb"
    #t1=$[ta * tb]
    #echo $t1

    #进程最大可打开文件数
    ulim=$( ulimit -n )
    #内核
	kern=$( uname -r )  
    #IP
	IP=$(curl -s myip.ipip.net | awk -F ' ' '{print $2}' | awk -F '：' '{print $2}')
    #地理位置
	IPaddr=$(curl -s myip.ipip.net | awk -F '：' '{print $3}')
	if [ "$IP" == "" ]; then
		IP=$(curl -s ip.cn | awk -F ' ' '{print $2}' | awk -F '：' '{print $2}')
		IPaddr=$(curl -s ip.cn | awk -F '：' '{print $3}')	
	fi
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}




# 确保只有root用户才能运行脚本
function rootness(){
    if [[ $EUID -ne 0 ]]; then
       echo "Error:此脚本必须以root用户身份运行!" 1>&2
       exit 1
    fi
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}

# Get version
function getversion(){
    if [[ -s /etc/redhat-release ]];then
        grep -oE  "[0-9.]+" /etc/redhat-release
    else    
        grep -oE  "[0-9.]+" /etc/issue
    fi    
}

# CentOS version
function centosversion(){
    local code=$1
    local version="`getversion`"
    local main_ver=${version%%.*}
    if [ $main_ver == $code ];then
        return 0
    else
        return 1
    fi        
}

# Disable selinux
function disable_selinux(){
if [ -s /etc/selinux/config ] && grep 'SELINUX=enforcing' /etc/selinux/config; then
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    setenforce 0
fi
}

# Pre-installation settings
function pre_install(){
    # Not support CentOS 5
    if centosversion 5; then
        echo "不支持CentOS 5，请将操作系统更改为CentOS 6+/Debian 7+/Ubuntu 12+，然后重试."
        exit 1
    fi
    # 设置矿池地址
    echo "请输入矿池代理地址:"
    read -p "(默认flexpool池: eth-hke.flexpool.io:5555):" wubbaaddr
    [ -z "$wubbaaddr" ] && wubbaaddr="eth-hke.flexpool.io:5555"
    echo
    echo "---------------------------"
    echo "paddr = $wubbaaddr"
    echo "---------------------------"
    echo
    # 设置矿池端口
    while true
    do
    echo -e "请输入矿池连接端口,不设置将默认2020端口:"
    read -p "(默认自动设置SSl端口为2020):" wubbaport
    [ -z "$wubbaport" ] && wubbaport="2020"
    expr $wubbaport + 0 &>/dev/null
    if [ $? -eq 0 ]; then
        if [ $wubbaport -ge 1 ] && [ $wubbaport -le 65535 ]; then
            echo
            echo "---------------------------"
            echo "port = $wubbaport"
            echo "---------------------------"
            echo
            break
        else
            echo "输入错误，请输入1-65535之间的数字！"
        fi
    else
        echo "输入错误，请输入1-65535之间的数字！"
    fi
    done
	if [ "$os" == 'centos' ]; then
		#yum -y install make gcc gcc-c++
        yum install wget gcc -y
        yum install  curl curl-devel zlib zlib-devel pcre pcre-devel openssl openssl-devel -y
	else
        apt install wget -y           
        apt install gcc -y 
        apt install curl -y 
        apt install curl-devel -y 
        apt install pcre -y 
        apt install pcre-devel -y 
        apt install zlib -y
        apt install zlib-devel -y 
        apt install openssl  -y
        apt install openssl-devel -y 
        sudo apt-get install sysv-rc-conf -y
	fi
    cd $cur_dir
}
# 下载文件
function download_files(){
    # 下载nginx文件
    if ! wget --no-check-certificate -O nginx-1.21.3.tar.gz https://nginx.org/download/nginx-1.21.3.tar.gz; then
        echo "下载nginx文件失败！"
        exit 1
    fi
}

# 防火墙设置
function firewall_set(){
    echo "防火墙设置启动..."
    if centosversion 6; then
        /etc/init.d/iptables status > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            iptables -L -n | grep '${wubbaport}' | grep 'ACCEPT' > /dev/null 2>&1
            if [ $? -ne 0 ]; then
                iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wubbaport} -j ACCEPT
                iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wubbaaddr#*:} -j ACCEPT
                /etc/init.d/iptables save
                /etc/init.d/iptables restart
            else
                echo "port ${wubbaport} 设置完成."
            fi
        else
            echo "警告：iptables可能已关闭或未安装，如有必要，请手动设置."
        fi
    elif centosversion 7; then
        systemctl status firewalld > /dev/null 2>&1
        if [ $? -eq 0 ];then
            firewall-cmd --permanent --zone=public --add-port=${wubbaport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wubbaaddr#*:}/tcp
            firewall-cmd --reload
        else
            echo "Firewalld看起来没有运行，请尝试启动..."
            systemctl start firewalld
            if [ $? -eq 0 ];then
            firewall-cmd --permanent --zone=public --add-port=${wubbaport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wubbaaddr#*:}/tcp
                firewall-cmd --reload
            else
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${wubbaport} ."
            fi
        fi
    fi
    echo "防火墙设置完成..."
}

# Config wubbaPool
function config_wubba(){
    checkos
    prewget
    rm -rf $conf_file
    cat > $conf_file<<-EOF

worker_processes ${t1};

events {
    use epoll;
    accept_mutex on;
    multi_accept on;
    worker_connections ${ulim};
}
stream {
     upstream backend {
        hash \$remote_addr consistent;
        server ${wubbaaddr} max_fails=3 fail_timeout=10s;
     }
     server {
         listen ${wubbaport};
         proxy_connect_timeout 20s;
         proxy_pass backend;
     }
  }
EOF
}



# 开机自启
function config_init(){
    rm -rf /etc/init.d/n.sh
    checkos
    cd /home/lhteth/nginx
    cat > n.sh<<-EOF
#!/bin/sh
#
#chkconfig: 2345 80 90
#description: nginx

start() {
    /home/lhteth/nginx/sbin/nginx
}

reload() {
    /home/lhteth/nginx/sbin/nginx -s reload
}

stop() {
    /home/lhteth/nginx/sbin/nginx -s quit
}

case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  *)
echo $"Usage: $0 {start|stop|restart|reload}"
exit 1
esac
EOF
          cp /home/lhteth/nginx/n.sh /etc/init.d/
           chmod 777  /etc/init.d/n.sh
	if [ "$os" == 'centos' ]; then
        echo "etc/init.d/n.sh start" > /etc/rc.d/rc.local 
        chmod +x /etc/rc.d/rc.local 
	else

    
       sudo update-rc.d n.sh defaults 90
	fi





}



# Install wubbaPool
function install_pool(){
    # Install nginx
    rm -rf /usr/bin/nginx
    useradd www
    chmod 777 nginx-1.21.3.tar.gz
    tar zxf nginx-1.21.3.tar.gz
    cd $cur_dir/nginx-1.21.3
    ./configure --prefix=/home/lhteth/nginx --user=www --group=www --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-poll_module
    sleep 1
    make
    sleep_time 89
    make install
    sleep_time 89
    ln -s /home/lhteth/nginx/sbin/nginx /usr/bin
    # Install wubbaPool
        cd $cur_dir
        nginx -v
        # Run wubbaPool in the background
        if [ $? -eq 0 ]; then
        config_init
        prewget
        clear
        sleel 1
        cd /home/lhteth/nginx
        sleep_time 89
        echo
        echo "恭喜你，wubbaPool安装完成！"
        echo -e "本地矿池节点: \033[41;37m ${IP}:${wubbaport} \033[0m"
        echo -e "远程矿池地址: \033[41;37m ${wubbaaddr} \033[0m"
        echo
        echo "地理位置：${IPaddr}"
        echo "线程数：${t1}."
        echo "进程最大可打开文件数：${ulim}."
        echo "bug提交群:https://jq.qq.com/?_wv=1027&k=wgQnoL7S "
        echo "启动命令 :nginx -s start, ，重启命令："
        echo "停止命令 ：nginx -s stop"
        echo "重启命令： nginx -s restart"
        echo "配置重载： nginx -s reload"
        echo "另外：一键/修改/更新/web控制台等，有时间放进来"
        echo ""
        echo "=================稍等片刻！================"
        echo ""
        echo "安装完毕!"
        echo
        echo ""
    else
        echo "wubbaPool安装失败!"
        install_cleanup
        exit 1
    fi

    read -p "请稍后手动开启nginx（start nginx？）：" yourprint

   echo"请输入   nginx -s start   开启服务器  如果有问题 请关闭再次开启 。"
}


# 清理安装文件
function install_cleanup(){
    cd $cur_dir
    rm -f nginx-1.21.3.tar.gz
    rm -rf nginx-1.21.3
}


# 卸载
function uninstall_wubba(){
    printf "你确定卸载wubbaPool？ (y/n) "
    printf "\n"
    read -p "(Default: n):" answer
    if [ -z $answer ]; then
        answer="n"
    fi
    if [ "$answer" = "y" ]; then
        nginx -s stop > /dev/null 2>&1
        if [ $? -eq 0 ]; then
        ps -ef |grep nginx 
            echo"停止成功"
        fi
        checkos
	if [ "$os" == 'centos' ]; then
            chkconfig --del wubba
        else
            update-rc.d -f wubba remove
        fi

        rm -rf /home/lhteth/
        rm -f /etc/init.d/wubba
        rm -rf /usr/bin/nginx
        echo "wubbaPool 卸载成功!"
    else
        echo "卸载已取消，无需执行任何操作"
    fi
}

function sleep_time(){

b=''
i=$1
while [ $i -le 100 ]
do
 printf "[%-50s] %d%% \r" "$b" "$i";
 sleep 0.5
 ((i=i+2))
 b+='#'
done
echo
}

# 安装
function install_wubba(){
    checkos
    sleep 1
    rootness
        sleep 1
    disable_selinux
        sleep 1
    pre_install
        sleep 1
    download_files
        sleep 1
    install_pool
       sleep 2
    config_wubba
        sleep 1
	if [ "$os" == 'centos' ]; then
        firewall_set > /dev/null 2>&1
    fi
    install_cleanup
	
}

# Initialization step 初始化
action=$1
[ -z $1 ] && action=install
case "$action" in
install)
    install_wubba
    ;;
uninstall)
    uninstall_wubba
    ;;
*)
    echo "参数错误! [${action} ]"
    echo "用法: `basename $0` {install|uninstall}"
    ;;
esac
